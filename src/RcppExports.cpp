// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

// RtoAnovaCpp
List RtoAnovaCpp(const List& rparam, RcppGSL::Matrix& Y, RcppGSL::Matrix& X, RcppGSL::Matrix& isXvarIn, SEXP bIDsexp);
RcppExport SEXP mvabund_RtoAnovaCpp(SEXP rparamSEXP, SEXP YSEXP, SEXP XSEXP, SEXP isXvarInSEXP, SEXP bIDsexpSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const List& >::type rparam(rparamSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Matrix& >::type Y(YSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Matrix& >::type X(XSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Matrix& >::type isXvarIn(isXvarInSEXP );
        Rcpp::traits::input_parameter< SEXP >::type bIDsexp(bIDsexpSEXP );
        List __result = RtoAnovaCpp(rparam, Y, X, isXvarIn, bIDsexp);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// RtoGlmAnova
List RtoGlmAnova(const List& sparam, const List& rparam, RcppGSL::Matrix& Y, RcppGSL::Matrix& X, RcppGSL::Matrix& O, RcppGSL::Matrix& isXvarIn, SEXP bIDsexp, RcppGSL::Vector& lambda);
RcppExport SEXP mvabund_RtoGlmAnova(SEXP sparamSEXP, SEXP rparamSEXP, SEXP YSEXP, SEXP XSEXP, SEXP OSEXP, SEXP isXvarInSEXP, SEXP bIDsexpSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const List& >::type sparam(sparamSEXP );
        Rcpp::traits::input_parameter< const List& >::type rparam(rparamSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Matrix& >::type Y(YSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Matrix& >::type X(XSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Matrix& >::type O(OSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Matrix& >::type isXvarIn(isXvarInSEXP );
        Rcpp::traits::input_parameter< SEXP >::type bIDsexp(bIDsexpSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Vector& >::type lambda(lambdaSEXP );
        List __result = RtoGlmAnova(sparam, rparam, Y, X, O, isXvarIn, bIDsexp, lambda);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// RtoGlm
List RtoGlm(const List& rparam, RcppGSL::Matrix& Y, RcppGSL::Matrix& X, RcppGSL::Matrix& O);
RcppExport SEXP mvabund_RtoGlm(SEXP rparamSEXP, SEXP YSEXP, SEXP XSEXP, SEXP OSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const List& >::type rparam(rparamSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Matrix& >::type Y(YSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Matrix& >::type X(XSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Matrix& >::type O(OSEXP );
        List __result = RtoGlm(rparam, Y, X, O);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// RtoGlmSmry
List RtoGlmSmry(const List& sparam, const List& rparam, RcppGSL::Matrix& Y, RcppGSL::Matrix& X, RcppGSL::Matrix& O, SEXP bIDsexp, RcppGSL::Vector& lambda);
RcppExport SEXP mvabund_RtoGlmSmry(SEXP sparamSEXP, SEXP rparamSEXP, SEXP YSEXP, SEXP XSEXP, SEXP OSEXP, SEXP bIDsexpSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const List& >::type sparam(sparamSEXP );
        Rcpp::traits::input_parameter< const List& >::type rparam(rparamSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Matrix& >::type Y(YSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Matrix& >::type X(XSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Matrix& >::type O(OSEXP );
        Rcpp::traits::input_parameter< SEXP >::type bIDsexp(bIDsexpSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Vector& >::type lambda(lambdaSEXP );
        List __result = RtoGlmSmry(sparam, rparam, Y, X, O, bIDsexp, lambda);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// RtoSmryCpp
List RtoSmryCpp(const List& rparam, RcppGSL::Matrix& Y, RcppGSL::Matrix& X, SEXP bIDsexp);
RcppExport SEXP mvabund_RtoSmryCpp(SEXP rparamSEXP, SEXP YSEXP, SEXP XSEXP, SEXP bIDsexpSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const List& >::type rparam(rparamSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Matrix& >::type Y(YSEXP );
        Rcpp::traits::input_parameter< RcppGSL::Matrix& >::type X(XSEXP );
        Rcpp::traits::input_parameter< SEXP >::type bIDsexp(bIDsexpSEXP );
        List __result = RtoSmryCpp(rparam, Y, X, bIDsexp);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
