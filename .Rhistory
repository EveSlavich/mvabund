library(Rcpp)
compileAttributes()
q()
library(Rcpp)
compileAttributes()
q()
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/manyglm.R', echo=TRUE)
library(mvabund)
mvbirds<-read.csv("../../mvabundissues/MVABUND w NAs.csv") #this one is full of NA's. Some spp only have one non-NA value
birdspecies<-mvbirds[, c(2:321)] # subset species in columns, here they are in columns 4 to 48
Aim<-mvbirds$Aim
spp14 = mvabund(birdspecies[,c(1,4)])
manybird14 <- manyglm(spp14~ Aim, family =  "binomial")
spp12 = mvabund(birdspecies[,1:2])
manybird12 <- manyglm(spp23~ Aim, family =  "binomial")
manybird12 <- manyglm(spp12~ Aim, family =  "binomial")
spp123 = mvabund(birdspecies[,1:3])
manybird123 <- manyglm(spp123~ Aim, family =  "binomial")
cbind(Aim,spp123)
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/manyglm.R', echo=TRUE)
manybird123 <- manyglm(spp123~ Aim, family =  "binomial")
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/RcppExports.R', echo=TRUE)
manybird123 <- manyglm(spp123~ Aim, family =  "binomial")
logLik(manybird123)
fitted(manybird123)
options("na.action")
?na.actoin
?na.action
manybird123 <- manyglm(spp123~ Aim, family =  "binomial",na.action=options("na.exclude"))
optoins("na.action")
options("na.action")
manybird123 <- manyglm(spp123~ Aim, family =  "binomial",na.action="na.exclude")
logLik(manybird123)
fitted(manybird123)
manybird123 <- manyglm(spp123~ Aim, family =  "binomial",na.action="na.pass")
spp12 = mvabund(birdspecies[,1:2])
manybird12 <- manyglm(spp12~ Aim, family =  "binomial")
fitted(manybird12)
manybird14 <- manyany("glm",yMat=spp14,data=data.frame(Aim),spp14~ Aim, family =  "binomial")
manyany12 <- manyany("glm",yMat=spp12,data=data.frame(Aim),spp14~ Aim, family =  "binomial")
manyany123 <- manyany("glm",yMat=spp123,data=data.frame(Aim),spp14~ Aim, family =  "binomial")
table(Aim,spp123[,1])
table(Aim,spp123[,2])
table(Aim,spp123[,3])
manyany123 <- manyany("glm",yMat=spp123[,3],data=data.frame(Aim),spp14~ Aim, family =  "binomial")
manyany123 <- manyany("glm",yMat=spp123[,2:3],data=data.frame(Aim),spp14~ Aim, family =  "binomial")
optoins(error=recover)
options(error=recover)
manyany123 <- manyany("glm",yMat=spp123[,2:3],data=data.frame(Aim),spp14~ Aim, family =  "binomial")
attr(mt)
attributes(mt)
attributes(mf)
?model.frame
glm(spp123[,3]~ Aim, family =  "binomial")
?glm
options(na.action)
options("na.action")
glm(spp123[,3]~ Aim, family =  "binomial",na.action="na.pass")
glm(spp123[,3]~ Aim, family =  "binomial",na.action="na.exclude")
spp12 = mvabund(birdspecies[,1:2])
manybird12 <- manyglm(spp12~ Aim, family =  "binomial")
fitted(manybird12)
spp123 = mvabund(birdspecies[,1:3])
manybird123 <- manyglm(spp123~ Aim, family =  "binomial")
fitted(manybird12)
fitted(manybird123)
anova(manybird123,nBoot=2)
anova(manybird123,nBoot=4)
library(mvabund)
mvbirds<-read.csv("MVABUND w NAs.csv")
birdspecies<-mvbirds[, c(2:321)] # subset species in columns, here they are in columns 4 to 48
Speciesmvabund <- mvabund(birdspecies)
Aim<-mvbirds$Aim
Author1<-mvbirds$Author1
Author2<-mvbirds$Author2
Class<-mvbirds$Class
Location<-mvbirds$Location
mvbirdNew = rbind(mvbirds,0) #note this didn't work for the factor variables which will need to be manually edited
birdNew<-mvbirdNew[, c(2:321)] # subset species in columns, here they are in columns 4 to 48
SpeciesNew <- mvabund(birdNew)
predNew=data.frame(birdNew[,0]) #create an empty data frame with the same number of rows as birdNew
#Now take each of the original factors and add a 0 at the end
predNew$Aim<-as.factor(c(mvbirds$Aim,"0"))
predNew$Author1<-as.factor(c(mvbirds$Author1,0))
predNew$Author2<-as.factor(c(mvbirds$Author2,0))
predNew$Class<-as.factor(c(mvbirds$Class,0))
predNew$Location<-as.factor(c(mvbirds$Location,"0"))
manyanybird<-manyany("glm",SpeciesNew, data=predNew, Speciesmvabund~ Aim + Location + Class, family="binomial")
mvbirds<-read.csv("../../mvabundissues/MVABUND w NAs.csv") #this one is full of NA's. Some spp only have one non-NA value
birdspecies<-mvbirds[, c(2:321)] # subset species in columns, here they are in columns 4 to 48
Speciesmvabund <- mvabund(birdspecies)
Aim<-mvbirds$Aim
Author1<-mvbirds$Author1
Author2<-mvbirds$Author2
Class<-mvbirds$Class
Location<-mvbirds$Location
predictor<-data.frame(Aim,Class,Location)
mvbirdNew = rbind(mvbirds,0) #note this didn't work for the factor variables which will need to be manually edited
birdNew<-mvbirdNew[, c(2:321)] # subset species in columns, here they are in columns 4 to 48
SpeciesNew <- mvabund(birdNew)
predNew=data.frame(birdNew[,0]) #create an empty data frame with the same number of rows as birdNew
#Now take each of the original factors and add a 0 at the end
predNew$Aim<-as.factor(c(mvbirds$Aim,"0"))
predNew$Author1<-as.factor(c(mvbirds$Author1,0))
predNew$Author2<-as.factor(c(mvbirds$Author2,0))
predNew$Class<-as.factor(c(mvbirds$Class,0))
predNew$Location<-as.factor(c(mvbirds$Location,"0"))
manyanybird<-manyany("glm",SpeciesNew, data=predNew, Speciesmvabund~ Aim + Location + Class, family="binomial")
anova(manyanybird,nBoot=3)
manyglmbird0<-manyany("glm",SpeciesNew, data=predNew, Speciesmvabund~ Aim , family="binomial")
anova(manyglmbird0,manyglmbird,nBoot=3)
manyglmbird<-manyany("glm",SpeciesNew, data=predNew, Speciesmvabund~ Aim + Location + Class, family="binomial")
anova(manyglmbird0,manyglmbird,nBoot=3)
Spp = Speciesmvabund
nValues = apply(is.na(Spp)==FALSE,2,sum)
Spp = Spp[,nValues>3]
manyglmbird<-manyany("glm",Spp, data=predNew, Speciesmvabund~ Aim + Location + Class, family="binomial")
manyglmbird0<-manyany("glm",Spp, data=predNew, Speciesmvabund~ Aim , family="binomial")
anova(manyglmbird0,manyglmbird,nBoot=3)
optoins(error=recover)
options(error=recover)
manyglmbird<-manyany("glm",Spp, data=predNew, Speciesmvabund~ Aim + Location + Class, family="binomial")
SppNew=rbind(Spp,0)
manyanyClNew<-manyany("glm",SppNew, data=predNew, Speciesmvabund~ Class, family="binomial")
manyanyAll<-manyany("glm",Spp, data=predNew, Speciesmvabund~ Aim + Location + Class, family="binomial")
manyanyAll<-manyany("glm",SppNew, data=predNew, Speciesmvabund~ Aim + Location + Class, family="binomial")
anova(manyanyClNew,manyanyAll)
ls()
is.zeroton
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/anova.manyany.R', echo=TRUE)
anova(manyanyClNew,manyanyAll)
is.zeroton
dim(yMat)
yMat[,1:3]
anova(manyanyClNew,manyanyAll,nBoot=9)
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/anova.manyany.R', echo=TRUE)
anova(manyanyClNew,manyanyAll,nBoot=9)
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/anova.manyany.R', echo=TRUE)
anova(manyanyClNew,manyanyAll,nBoot=9)
eval(argList$object1$call)
arglist$object1$call
argList$object1$call
SppNew
argList$object1$call
dim(predNew)
predNew
names(manyanyAll)
>glm
?glm
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/manyany.R', echo=TRUE)
anova(manyanyClNew,manyanyAll,nBoot=4)
ft.1i=eval(argList$object1$call)
dim(predNew)
argList$object1$call
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/manyany.R', echo=TRUE)
anova(manyanyClNew,manyanyAll,nBoot=4)
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/manyany.R', echo=TRUE)
manyanyClNew<-manyany("glm",SppNew, data=predNew, Speciesmvabund~ Class, family="binomial")
dim(fitted(manyfit[[i.var]]))
length(fitted(manyfit[[i.var]]))
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/manyany.R', echo=TRUE)
manyanyClNew<-manyany("glm",SppNew, data=predNew, Speciesmvabund~ Class, family="binomial")
manyanyAll<-manyany("glm",SppNew, data=predNew, Speciesmvabund~ Aim + Location + Class, family="binomial")
anova(manyanyClNew,manyanyAll,nBoot=4)
argList$object1$call
dim(predNew)
names(object1)
names(arglist$object1)
names(argList$object1)
dim(argList$object1$model)
dim(argList$object1$fit)
dim(argList$object1$res)
argList$object1$res[1:5,1:4]
?model.frame
?data
?data.frame
getOption("na.action")
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/manyany.R', echo=TRUE)
manyanyClNew<-manyany("glm",SppNew, data=predNew, Speciesmvabund~ Class, family="binomial")
manyanyAll<-manyany("glm",SppNew, data=predNew, Speciesmvabund~ Aim + Location + Class, family="binomial")
anova(manyanyClNew,manyanyAll,nBoot=4)
dim(predNew)
dim(argList$object1$res)
dim(argList$object1$fitt)
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/anova.manyany.R', echo=TRUE)
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/manyany.R', echo=TRUE)
manyanyClNew<-manyany("glm",SppNew, data=predNew, Speciesmvabund~ Class, family="binomial")
manyanyAll<-manyany("glm",SppNew, data=predNew, Speciesmvabund~ Aim + Location + Class, family="binomial")
anova(manyanyClNew,manyanyAll,nBoot=4)
argList$object1$call
argList$object1$call
dim(predNew)
optoins("na.action")
options("na.action")
getOption("na.action")
dim(argList$object1$res)
?model.frame
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/manyany.R', echo=TRUE)
manyanyClNew<-manyany("glm",SppNew, data=predNew, Speciesmvabund~ Class, family="binomial")
dim(model.frame(manyfit[[i.var]]))
options("na.action")
dim(model.frame(manyfit[[i.var]],na.action="na.exclude"))
names(manyfit[[i.var]])
dim(manyfit[[i.var]]$data)
dim(manyfit[[i.var]]$model)
dim(manyfit[[i.var]]$na)
dim(manyfit[[i.var]]$na.a)
manyfit[[i.var]]$data[,1:4]
manyfit[[i.var]]$model[,1:4]
manyfit[[i.var]]$model
manyfit[[i.var]]$model[1:4,]
glm
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/manyany.R', echo=TRUE)
manyanyClNew<-manyany("glm",SppNew, data=predNew, Speciesmvabund~ Class, family="binomial")
manyanyAll<-manyany("glm",SppNew, data=predNew, Speciesmvabund~ Aim + Location + Class, family="binomial")
anova(manyanyClNew,manyanyAll,nBoot=4)
dim(data)
class(data)
data
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/manyany.R', echo=TRUE)
manyanyClNew<-manyany("glm",SppNew, data=predNew, Speciesmvabund~ Class, family="binomial")
dim(mf)
any(names(manyfit[[i.var]])=="data")
mf = if(any(names(manyfit[[i.var]])=="data")) manyfit[[i.var]]$data else model.frame(manyfit[[i.var]])
dim(mf)
source('C:/Users/z3103495/Dropbox/multcnt/git/mvabund/R/manyany.R', echo=TRUE)
manyanyClNew<-manyany("glm",SppNew, data=predNew, Speciesmvabund~ Class, family="binomial")
manyanyAll<-manyany("glm",SppNew, data=predNew, Speciesmvabund~ Aim + Location + Class, family="binomial")
anova(manyanyClNew,manyanyAll,nBoot=4)
ls()
argList$object1$call
ls()
argList$object1$call
dim(predNew)
y
yMat[,i.var]
names(qparams)
qparams$p
iBoot
library(mvabund)
example(manyglm)
names(glm.spid)
glm.spid
deviance(glm.spid)
gg=glm(spiddat[,1~X],family="poisson")
gg=glm(spiddat[,1]~X,family="poisson")
options(na.action)
options("na.action")
spiddat[,1]
X
gg=glm(spiddat[,1]~.,data=X,family="poisson")
gg
V=matrix(c(12,3,4,3,10,6,4,6,9),3,3)
V
eigen(V)
eV=eigen(V)
M=c(1,2,3)
t(M)%*%V%*%M
M%*%diag(eV$val)%*%M
t(M)%*%diag(eV$val)%*%M
trace(M%*%t(M)%*%diag*eV$values)
trace(M%*%t(M)%*%diag(eV$values))
tr(M%*%t(M)%*%diag(eV$values))
sum(diag(M%*%t(M)%*%diag(eV$values)))
source('D:/Dropbox/multcnt/git/mvabund/R/manyany.R', echo=TRUE)
example(manyany)
library(mvabund)
source('D:/Dropbox/multcnt/git/mvabund/R/manyany.R', echo=TRUE)
example(manyany)
library(mvabund)
source('D:/Dropbox/multcnt/git/mvabund/R/manyany.R', echo=TRUE)
example(manyany)
library(MASS)
example(manyany)
example(manyany)
ls()
options(error=recover)
example(manyany)
ls()
na.action
source('D:/Dropbox/multcnt/git/mvabund/R/manyany.R', echo=TRUE)
example(manyany)
spidPA
